@use "sass:math";

@import "../_common/variables.scss";

$column-count: 12 !default;
$column-selector: '.col' !default;
$offset-modifier: 'offset' !default;

$gutter-width: 1rem !default;
$outer-margin: 2rem !default;
$gutter-compensation: (math.div($gutter-width, 2) * -1) !default;
$half-gutter-width: math.div($gutter-width, 2) !default;

$width-wl: 100em !default;

$wl: 'wl' !default;

$block-delimiter: '-' !default;
$element-delimiter: '-' !default;
$modifier-delimiter: '-' !default;

$defaultQuery: $viewport-xs !default;
$sizes: #{$wl} !default;
$queries: (#{$wl}:#{$width-wl}) !default;

$column-properties: 'flex-basis', 'max-width' !default;
$offset-properties: 'margin-left' !default;


@mixin colSlim() {
    flex-grow: 0;
    flex-basis: auto;
    flex-shrink: 1;
}

@mixin autoWidth() {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
}

@mixin percentWidth($property, $columns, $count) {
    #{$property}: (math.div(100%, $columns) * $count);
}

@mixin percentOffset($property, $columns, $count) {
    $single-column-width: (math.div(100%, $columns) * 1);
    #{$property}: $single-column-width * $count;
}

@mixin queries($key, $queries) {
    $query: map-get($queries, $key);

    @if ($query == $defaultQuery) {
        @content;
    }
    @else {
        @media screen and (min-width: #{$query}) {
            @content;
        }
    }
}

@mixin columns($selector: $column-selector, $properties: $column-properties, $columns: $column-count, $queries: $queries) {
    @each $size in $sizes {
        @include queries($size, $queries) {
            @for $i from 0 through $columns {
                @if ($i == 0) {
                    #{$selector}#{$block-delimiter}#{$size} {
                        @content;
                        @include autoWidth();
                    }
                }
                @else {
                    #{$selector}#{$block-delimiter}#{$size}#{$modifier-delimiter}#{$i} {
                        @content;

                        @each $prop in $properties {
                            @include percentWidth($prop, $columns, $i);
                        }
                    }
                }
            }
        }
    }
}

@mixin offsets($selector: $column-selector, $modifier-selector: $offset-modifier, $properties: $offset-properties, $columns: $column-count, $queries: $queries) {
    @each $size in $sizes {
        @for $i from 1 through $columns {
            #{$selector}#{$block-delimiter}#{$size}#{$modifier-delimiter}#{$modifier-selector}#{$modifier-delimiter}#{$i} {
                @include queries($size, $queries) {
                    @content;

                    @each $prop in $properties {
                        @include percentOffset($prop, $columns, $i);
                    }
                }
            }
        }
    }
}

@mixin breakpoints($selector, $queries: $queries) {
    @each $size in $sizes {
        #{$selector}#{$modifier-delimiter}#{$size} {
            @include queries($size, $queries) {
                @content;
            }
        }
    }
}

@include columns() {
    box-sizing: border-box;
    flex-grow: 0;
    flex-shrink: 0;
    padding-right: $half-gutter-width;
    padding-left: $half-gutter-width;
}

@include offsets() {
    box-sizing: border-box;
    flex-grow: 0;
    flex-shrink: 0;
    padding-right: $half-gutter-width;
    padding-left: $half-gutter-width;
}

@include breakpoints('.start') {
    justify-content: flex-start;
}

@include breakpoints('.center') {
    justify-content: center;
}

@include breakpoints('.end') {
    justify-content: flex-end;
}

@include breakpoints('.top') {
    align-items: flex-start;
}

@include breakpoints('.middle') {
    align-items: center;
}

@include breakpoints('.bottom') {
    align-items: flex-end;
}

@include breakpoints('.around') {
    justify-content: space-around;
}

@include breakpoints('.between') {
    justify-content: space-between;
}

@include breakpoints('.first') {
    order: -1;
}

@include breakpoints('.last') {
    order: 1;
}

@include breakpoints('.reverse') {
    flex-direction: row-reverse;
}


.col-xs-slim {
    @include colSlim();
    padding-left: 8px;
    padding-right: 8px;
}

.col--only-pad {
    padding-left: 8px;
    padding-right: 8px;
}

.col--v-pad {
    padding-top: 8px;
    padding-bottom: 8px;
}

@media #{$viewport-sm} {
    .col-sm-slim {
        @include colSlim();
    }
}

@media #{$viewport-md} {
    .col-md-slim {
        @include colSlim();
    }
}

@media #{$viewport-lg} {
    .col-lg-slim {
        @include colSlim();
    }
}

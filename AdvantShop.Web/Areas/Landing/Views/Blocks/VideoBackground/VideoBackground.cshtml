@model BlockModel
@using AdvantShop.Core.Services.Landing.Pictures;
@{
    var templateSelected = Model.Block.TryGetSetting("template_selected");
}

    <div class="full-width">
        <div class="video-background__video-container">
            @Html.SubBlock(Model, "video")
        </div>
        <div class="video-background__overlay" ng-style="blocksConstructorContainer.data.Settings.style"
             style="box-shadow:rgba(0, 0, 0, @(Model.Block.TryGetSetting("darken") != null ? ((double)Model.Block.TryGetSetting("darken")).ToInvariantString() : "0")) 200vh 200vw inset;"></div>
        <div class="relative">
            <div class="video-background__text-container">
                <div class="lp-container">
                    <div class="container-fluid">
                        <div class="row center-xs">
                            <div class="col-xs-12 @Model.Block.GetWidthInColumnsAsClasses()">

                                @if (Model.Block.TryGetSetting("enable_picture") == true)
                                {
                                    <div class="flex @(Model.Block.TryGetSetting("align_image") != null ? Model.Block.TryGetSetting("align_image") :"center-xs")">
                                        <div class="video-background__image-wrap">
                                            <div class="video-background__image-inner">
                                                @Html.SubBlockPicture(Model.Block, "picture", new PictureLoaderTriggerModel()
                                                {
                                                    DeletePicture = false,
                                                    GalleryIconsEnabled = false,
                                                    LazyLoadType = ePictureLoaderLazyLoadType.Default,
                                                    MaxWidthPicture = PictureLoaderImageSize.WallWidth,
                                                    MaxHeightPicture = PictureLoaderImageSize.WallHeight,
                                                    ImageLink = Model.Block.TryGetSetting("image_link")
                                                }, Model.Inplace)
                                            </div>
                                        </div>
                                    </div>
                                }


                                @if (Model.Block.TryGetSetting("show_title") == true)
                                {
                                    <div class="row center-xs">
                                        <div class="col-xs-12 col-sm-8">
                                            <div class="video__addition-header lp-h2 lp-h2--color" data-e2e="TitleVideo">
                                                @Html.SubBlock(Model, "title")
                                            </div>
                                        </div>
                                    </div>

                                }
                                @if (Model.Block.TryGetSetting("show_subtitle") == true)
                                {
                                    <div class="row center-xs">
                                        <div class="col-xs-12 col-sm-8">
                                            <div class="video__addition-text lp-h3 lp-h3--color" data-e2e="SubTitleVideo">
                                                @Html.SubBlock(Model, "subtitle")
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div>
                                    <div class="row @(Model.Block.TryGetSetting("align_btns") != null ? Model.Block.TryGetSetting("align_btns") : "center-xs")">
                                        <div class="col-xs-12">
                                            @if (Model.Block.TryGetSetting("show_button") == true)
                                            {
                                                <div class="lp-cover-btn-wrap lp-cover-btn-wrap-inline" data-e2e="CoversBtn1">
                                                    @Html.Button(Model.Block, "button")
                                                </div>
                                            }
                                            @if (Model.Block.TryGetSetting("show_button2") == true)
                                            {
                                                <div class="lp-cover-btn-wrap-addition lp-cover-btn-wrap-inline lp-cover-btn-wrap" data-e2e="CoversBtn2">
                                                    @Html.Button(Model.Block, "button2")
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            @Html.Partial("_CoverScrollToBlock", Model)
        </div>
    </div>


@using AdvantShop.Core.Services.Landing.Pictures;
@model BlockModel
@{
    var items = Model.Block.TryGetSettingAsList<GalleryItemModel, OldGalleryItemModel>("items");
}

<div class="container-fluid">
    <div class="lp-container">
        <div class="row middle-xs">
            <div class="col-xs-12 col-sm-4 col-md-5 lp-block-text-image__col" @Html.Raw(Model.Inplace ? "lozad-adv=\"blocksConstructorContainer.getData()\"" : "")>
                @if (items != null)
                {
                    var itemsCount = LpService.PreviewInAdmin ? Math.Min(items.Count, 1) : items.Count;
                    <slick settings="@Model.Block.TryGetSetting("carouselOptions")" class="ng-cloak slick-arrow--inner text-center">
                        @for (var i = 0; i < itemsCount; i++)
                        {
                            <div>
                                @Html.PictureLoaderTrigger(new PictureLoaderTriggerModel()
                           {
                               LandingPageId = Model.Block.LandingId,
                               BlockId = Model.Block.Id,
                               OnApply = "blocksConstructorContainer.onApplyPicture(blocksConstructorContainer.data.Settings.items, result," + i + ")",
                               OnDelete = "blocksConstructorContainer.onDeletePicture(blocksConstructorContainer.data.Settings.items, " + i + ")",
                               OnLazyLoadChange = "blocksConstructorContainer.onLazyLoadChange(blocksConstructorContainer.data, result," + i + ")",
                               Current = items[i].Picture.Src,
                               GalleryIconsEnabled = false,
                               LazyLoadType = ePictureLoaderLazyLoadType.Carousel,
                               LazyLoadEnabled = items[i].Picture.LazyLoadEnabled,
                               MaxWidthPicture = PictureLoaderImageSize.SmallWidth,
                               MaxHeightPicture = PictureLoaderImageSize.SmallHeight,
                           })
                            </div>
                        }
                    </slick>
                }

            </div>
            <div class="col-xs-12 col-sm-8 col-md-7 lp-block-text-image__col">
                <div class="lp-block-text-image-reverse__content">
                    @if (Model.Block.TryGetSetting("show_title") == true)
                    {
                        <div class="lp-h2 lp-h2--color">
                            @Html.SubBlock(Model, "title")
                        </div>
                    }

                    @if (Model.Block.TryGetSetting("show_subtitle") == true)
                    {
                        <div class="lp-h3 lp-h3--color">
                            @Html.SubBlock(Model, "subtitle")
                        </div>
                    }

                    <div class="lp-h3--color lp-block-text--middle lp-font-size--middle">
                        @Html.SubBlock(Model, "text")
                    </div>
                    @if (Model.Block.TryGetSetting("show_button") == true || Model.Block.TryGetSetting("show_button2") == true)
                    {
                        <div class="lp-block-text-button">
                            <div class="row @Model.Block.TryGetSetting("align_btns")">
                                <div class="col-xs-12">
                                    <div class="lp-btn-group @Model.Block.TryGetSetting("align_btns")">
                                        @if (Model.Block.TryGetSetting("show_button") == true)
                                        {
                                            <div class="lp-btn-group__item--indent">
                                                @Html.Button(Model.Block, "button")
                                            </div>
                                        }
                                        @if (Model.Block.TryGetSetting("show_button2") == true)
                                        {
                                            <div class="lp-btn-group__item--indent">
                                                @Html.Button(Model.Block, "button2")
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

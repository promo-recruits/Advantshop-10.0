@using AdvantShop.Core.Services.Landing.Pictures;
@model BlockModel
@{
    var items = Model.Block.TryGetSettingAsList<GalleryItemModel, OldGalleryItemModel>("items");
}
<div class="lp-area">
    <div class="container-fluid">
        <div class="lp-container">

            <div class="gallery-sortable__puzzles-wrap">
                <div class="gallery-sortable__puzzles-row" @Html.Raw(Model.Inplace ? "lozad-adv=\"blocksConstructorContainer.getData()\" ng-controller=\"SubBlockGalleryConstructorCtrl as gallery\"" : "data-adv-baguette-box")>
                    @if (items != null)
                    {
                        for (var i = 0; i < items.Count; i++)
                        {
                            <div class="gallery-sortable__item gallery-sortable__puzzles-item">
                                @if (!Model.Inplace)
                                {
                                    @:<a href="@(items[i].Picture.Src)">
                                }
                                @Html.PictureLoaderTrigger(new PictureLoaderTriggerModel()
                                {
                                    LandingPageId = Model.Block.LandingId,
                                    BlockId = Model.Block.Id,
                                    OnApply = "blocksConstructorContainer.onApplyPicture(blocksConstructorContainer.data.Settings.items, result," + i + ")",
                                    OnDelete = "blocksConstructorContainer.onDeletePicture(blocksConstructorContainer.data.Settings.items, " + i + ")",
                                    OnLazyLoadChange = "blocksConstructorContainer.onLazyLoadChange(blocksConstructorContainer.data, result," + i + ")",
                                    Parameters = "[{ maxWidth: 600, postfix: 'preview'}]",
                                    Current = items[i].Picture.Src,
                                    DeletePicture = true,
                                    GalleryIconsEnabled = false,
                                    LazyLoadEnabled = items[i].Picture.LazyLoadEnabled,
                                    LazyLoadType = ePictureLoaderLazyLoadType.Default,
                                    CropperParams = new CropperParams()
                                    {
                                        AspectRatio = "1"
                                    },
                                    MaxWidthPicture = PictureLoaderImageSize.XMiddleWidth,
                                    MaxHeightPicture = PictureLoaderImageSize.XMiddleWidth,
                                    PictureShowType = "preview"
                                })

                                @if (!Model.Inplace)
                                {
                                @:</a>
                            }
                            </div>
                        }
                    }
                </div>
            </div>

        </div>
    </div>
</div>
@model BlockModel
@{
    var items = Model.Block.TryGetSettingAsList<TextModel>("items");
}

<div class="container-fluid">
    <div class="lp-container">

        @if (Model.Block.TryGetSetting("show_title") == true || Model.Block.TryGetSetting("show_subtitle") == true)
            {
            <div class="row center-xs">
                <div class="col-xs-12">
                    <div class="lp-block-columns-header">
                        @if (Model.Block.TryGetSetting("show_title") == true)
                        {
                            <div class="lp-h2 lp-h2--color">
                                @Html.SubBlock(Model, "title")
                            </div>
                        }
                        @if (Model.Block.TryGetSetting("show_subtitle") == true)
                        {
                            <div class="lp-h3 lp-h3--color">
                                @Html.SubBlock(Model, "subtitle")
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        <div class="row center-xs around-xs" @Html.Raw(Model.Inplace ? "lozad-adv=\"blocksConstructorContainer.getData()\"" : "")>

            @if (items != null)
            {
                for (var i = 0; i < items.Count; i++)
                {

                    <div class="col-xs-12 col-sm-3 lp-font-size--middle lp-block-columns-text">
                        <div class="lp-block-columns-four__item">
                            <div class="lp-block-columns-four__header" @Html.InplaceSettings(Model.Block.Id, "blocksConstructorContainer.data", "items[" + i + "].title")>
                                @Html.Raw(items[i].Title)
                            </div>
                            <div class="lp-h3--color" @Html.InplaceSettings(Model.Block.Id, "blocksConstructorContainer.data", "items[" + i + "].text")>
                                @Html.Raw(items[i].Text)
                            </div>
                        </div>
                    </div>

                }

            }

            @if (Model.Block.TryGetSetting("show_button") == true)
            {
                <div class="row @(Model.Block.TryGetSetting("align_btns") != null ? Model.Block.TryGetSetting("align_btns") : "center-xs") lp-block-columns-button">
                    <div class="col-xs-12">
                        @Html.Button(Model.Block, "button")
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@using AdvantShop.Catalog
@using AdvantShop.Core.Services.Landing.Pictures;
@model BlockModel

<div class="container-fluid">
    <div class="lp-container">
        <div class="row between-sm">
            <div class="col-xs-12 col-sm-5">
                <div class="product-details-with-video__video-wrap">
                    @Html.SubBlock(Model, "video")
                </div>

            </div>

            <div class="col-xs-12 col-sm-6">
                <div class="product-details__content">
                    <div class="lp-h2--color product-details__name">
                        @Html.SubBlock(Model, "product_name")
                    </div>
                    <div class="row center-xs product-details__addition-block-wrap">
                        <div class="col-xs-6 product-details__addition-block product-details__addition-block--border-right">
                            <div class="product-details__icon">
                                @Html.SubBlockPicture(Model.Block, "icon1", new PictureLoaderTriggerModel()
                               {
                                   DeletePicture = false,
                                   GalleryIconsEnabled = true,
                                   LazyLoadType = ePictureLoaderLazyLoadType.Default,
                                   MaxWidthPicture = PictureLoaderImageSize.XSmallWidth,
                                   MaxHeightPicture = PictureLoaderImageSize.XSmallHeight
                               }, Model.Inplace)
                            </div>
                            <div class="product-details__addition-text lp-h3--color">
                                @Html.SubBlock(Model, "text_additinal1")
                            </div>
                        </div>
                        <div class="col-xs-6 product-details__addition-block">
                            <div class="product-details__icon">
                                @Html.SubBlockPicture(Model.Block, "icon2", new PictureLoaderTriggerModel()
                                {
                                    DeletePicture = false,
                                    GalleryIconsEnabled = true,
                                    LazyLoadType = ePictureLoaderLazyLoadType.Default,
                                    MaxWidthPicture = PictureLoaderImageSize.XSmallWidth,
                                    MaxHeightPicture = PictureLoaderImageSize.XSmallHeight
                                }, Model.Inplace)
                            </div>
                            <div class="product-details__addition-text lp-h3--color">
                                @Html.SubBlock(Model, "text_additinal2")
                            </div>
                        </div>
                    </div>
                    <div class="lp-h3--color product-details__text">
                        @Html.SubBlock(Model, "text")
                    </div>
                    
                    @if (Model.Block.TryGetSetting("show_button") == true || Model.Block.TryGetSetting("show_button2") == true)
                    {
                        var button = Model.Block.TryGetSetting<LpButton>("button");
                        var offers = button != null ? button.ActionOfferItems : null;
                        if (offers != null && offers.Count == 1 && button.ShowOptions != null && button.ShowOptions.Value)
                        {
                            var offer = OfferService.GetOffer(offers[0].OfferId.TryParseInt());
                            if (offer != null)
                            {
                                <div class="row middle-xs">
                                    <div class="col-xs-slim">
                                        <div class="product-details__old-price">@Html.SubBlock(Model, "old_price")</div>
                                    </div>
                                    <div class="col-xs-slim">
                                        <div class="product-details__discount">@Html.SubBlock(Model, "discount")</div>
                                    </div>
                                </div>

                                @Html.Action("ProductInfoShortLanding", "Product", new
                                {
                                    area = "",
                                    productId = offer.ProductId,
                                    showButton = Model.Block.TryGetSetting("show_buybutton") == true,
                                    landingId = LpService.CurrentLanding.Id,
                                    blockId = Model.Block.Id,
                                    button = Model.Block.TryGetSetting<LpButton>("button"),
                                    showButton2 = Model.Block.TryGetSetting("show_button2") == true,
                                    button2 = Model.Block.TryGetSetting<LpButton>("button2"),
                                })
                            }
                        }
                        else
                        {
                            <div class="row middle-xs">
                                <div class="col-xs-slim">
                                    <div class="product-details__old-price">@Html.SubBlock(Model, "old_price", hidePlaceholder: true)</div>
                                </div>
                                <div class="col-xs-slim">
                                    <div class="product-details__discount">@Html.SubBlock(Model, "discount", hidePlaceholder: true)</div>
                                </div>
                            </div>

                            @*<div class="flex">
                                <div class="product-details__old-price">@Html.SubBlock(Model, "old_price", hidePlaceholder: true)</div>
                                <div class="product-details__discount">@Html.SubBlock(Model, "discount", hidePlaceholder: true)</div>
                            </div>*@
                            <div class="product-details__price">@Html.SubBlock(Model, "price")</div>

                            <div class="product-details__button">
                                <div class="row @(Model.Block.TryGetSetting("align_btns") != null ? Model.Block.TryGetSetting("align_btns") : "center-xs")">
                                    <div class="col-xs-12">
                                        <div class="lp-btn-group @(Model.Block.TryGetSetting("align_btns") != null ? Model.Block.TryGetSetting("align_btns") : "center-xs")">
                                            @if (Model.Block.TryGetSetting("show_button") == true)
                                            {
                                                <div class="lp-btn-group__item--indent">
                                                    @Html.Button(Model.Block, "button")
                                                </div>
                                            }
                                            @if (Model.Block.TryGetSetting("show_button2") == true)
                                            {
                                                <div class="lp-btn-group__item--indent">
                                                    @Html.Button(Model.Block, "button2")
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>


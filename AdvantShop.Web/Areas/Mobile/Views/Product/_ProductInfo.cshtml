@using AdvantShop.Core.Services.Catalog
@model AdvantShop.ViewModel.ProductDetails.ProductDetailsViewModel
@{
    var product = Model.Product;
    var offer = Model.Offer;
    var artNo = offer != null ? offer.ArtNo : product.ArtNo;
}

<div class="details-row details-sku product__info-item">
    <div class="details-param-name">@T("Product.ProductInfo.Sku"):</div>
    <div class="details-param-value inplace-offset"
         data-ng-bind="product.offerSelected.ArtNo"
         data-ng-init="product.offerSelected.ArtNo = '@artNo'">
    </div>
    @if (!Model.Product.Adult)
    {
        <meta itemprop="mpn" content="@(!product.Gtin.IsNullOrEmpty() ? product.Gtin : artNo)" />
        <meta itemprop="sku" content="@artNo" />
    }
    @if (!string.IsNullOrEmpty(product.Gtin))
    {
        <meta itemprop="gtin" content="@product.Gtin" />
    }
</div>
@if (product.Brand != null)
{
    <div class="details-row details-brand product__info-item">
        @if (product.Brand != null && product.Brand.Enabled)
        {
            <div class="details-param-name">@T("Product.ProductInfo.Brand")</div>
            <div class="details-param-value" @Html.Raw(Model.Product.Adult ? "" : "itemprop=\"brand\" itemtype=\"https://schema.org/Brand\" itemscope")>
                <span>: <a href="@Url.AbsoluteRouteUrl("Brand", new {url = product.Brand.UrlPath})">@product.Brand.Name</a></span>
                @if (!Model.Product.Adult)
                {
                    <meta itemprop="name" content="@product.Brand.Name" />
                }
            </div>
        }
    </div>
}
@if (SettingsCatalog.DisplayDimensions)
{
    var length = offer != null ? offer.GetLength() : 0;
    var width = offer != null ? offer.GetWidth() : 0;
    var height = offer != null ? offer.GetHeight() : 0;

    if (length != 0 || width != 0 || height != 0)
    {
        <div class="details-row details-dimensions  product__info-item">
            <div class="details-param-name">@T("Product.ProductInfo.Size"):</div>
            <div class="details-param-value"
                 data-ng-bind="product.offerSelected.Length + ' x ' + product.offerSelected.Width + ' x ' + product.offerSelected.Height">
                @(length + " x " + width + " x " + height)
            </div>
        </div>
    }
}
@if (SettingsCatalog.DisplayWeight && offer != null)
{
    <div class="details-row details-weight  product__info-item" data-ng-if="product.offerSelected.Weight != 0">
        <div class="details-param-name">@T("Product.ProductInfo.Weight"):</div>
        <div class="details-param-value">
            <div class="inplace-offset details-param-value-weight" data-ng-bind="product.offerSelected.Weight">@offer.GetWeight()</div> @T("Product.ProductInfo.Kg")
        </div>
    </div>
}
@if (product.Unit.IsNotEmpty())
{
    <div class="details-row details-unit product__info-item">
        <div class="details-param-name">@T("Product.ProductInfo.Unit"):</div>
        <div class="details-param-value inplace-offset">@product.Unit</div>
    </div>
}
@if (Model.BriefProperties != null)
{
    foreach (var value in Model.BriefProperties)
    {
        <div class="details-row details-briefproperties product__info-item">
            <div class="details-param-name">@Html.Raw(@value.Property.NameDisplayed):</div>
            <div class="details-param-value">
                @Html.Raw(@value.Value)
            </div>
        </div>
    }
}

@if (offer != null)
{
    @Html.Action("SizeColorPicker", "Product", new { area = "", product })
    @Html.Action("CustomOptions", "Product", new { area = "", product.ProductId })
}

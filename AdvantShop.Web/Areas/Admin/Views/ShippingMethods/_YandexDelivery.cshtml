@model AdvantShop.Web.Infrastructure.Admin.ShippingMethods.YandexDeliveryShippingAdminModel

@if (!Model.IsActive)
{
    <div class="form-group row middle-xs">
        <div class="col-xs-12">
            <p>@T("Admin.ShippingMethods.YandexDelivery.Instruction")</p>
            <p>@T("Admin.ShippingMethods.YandexDelivery.RegisterOnTheSite")<a href="https://delivery.yandex.ru/old-promo/" target="_blank">delivery.yandex.ru</a></p>
            <p>@T("Admin.ShippingMethods.YandexDelivery.FillDataInSections")</p>
            <p>@T("Admin.ShippingMethods.YandexDelivery.GoToIntefaceYandexDeliveryService")</p>
            <p>@T("Admin.ShippingMethods.YandexDelivery.CopyTheReceivedJsonKeys")</p>
        </div>
    </div>



    <div class="form-group row middle-xs">
        <div class="col-xs-6 relative">
            @Html.TextAreaFor(x => x.ApiKeys, new {ng_model = "shippingMethod.Params.ApiKeys", @class = "form-control", required = "required", validation_input_text = "ApiKeys", style = "height:150px"})
        </div>
    </div>



    <div class="form-group row middle-xs">
        <div class="col-xs-6 relative">
            @Html.TextAreaFor(x => x.ApiData, new {ng_model = "shippingMethod.Params.ApiData", @class = "form-control", required = "required", validation_input_text = "ApiData", style = "height:150px"})
        </div>
    </div>



    <div class="form-group row middle-xs">
        <div class="col-xs-12">
            @T("Admin.ShippingMethods.YandexDelivery.SaveTheSettings")
        </div>
    </div>

    @* after all settings *@
    @Html.Hidden("IsActive", true)
}
else
{
    <div class="form-group row middle-xs">
        <div class="flex-grow-n col-fixed-size-md">
            <span class="text-required">@T("Admin.ShippingMethods.YandexDelivery.CartWidgetCode")</span>
        </div>
        <div class="col-xs-6 relative">
            <p>
                @T("Admin.ShippingMethods.YandexDelivery.GoToYandexDeliveryService")
            </p>
            @Html.TextAreaFor(x => x.WidgetCode, new {@class = "form-control", ng_model = "shippingMethod.Params.WidgetCode", style="height: 80px", required = "required", validation_input_text = T("Admin.ShippingMethods.YandexDelivery.CartWidgetCode") })
        </div>
    </div>

    <div class="form-group row middle-xs">
        <div class="flex-grow-n col-fixed-size-md">
            <span class="text-required">client_id</span>
        </div>
        <div class="col-xs-6 relative">
            @Html.TextBoxFor(x => x.ClientId, new { @class = "form-control", ng_model = "shippingMethod.Params.ClientId", required = "required", validation_input_text = "client_id" })
        </div>
    </div>

    <div class="form-group row middle-xs">
        <div class="flex-grow-n col-fixed-size-md">
            <span class="text-required">sender_id</span>
        </div>
        <div class="col-xs-6 relative">
            @Html.TextBoxFor(x => x.SenderId, new { @class = "form-control", ng_model = "shippingMethod.Params.SenderId", required = "required", validation_input_text = "sender_id" })
        </div>
    </div>

    <div class="form-group row middle-xs">
        <div class="flex-grow-n col-fixed-size-md">
            <span class="text-required">warehouse_id</span>
        </div>
        <div class="col-xs-6 relative">
            @Html.TextBoxFor(x => x.WarehouseId, new { @class = "form-control", ng_model = "shippingMethod.Params.WarehouseId", required = "required", validation_input_text = "warehouse_id" })
        </div>
    </div>

    <div class="form-group row middle-xs">
        <div class="flex-grow-n col-fixed-size-md">
            <span class="text-required">requisite_id</span>
        </div>
        <div class="col-xs-6 relative">
            @Html.TextBoxFor(x => x.RequisiteId, new { @class = "form-control", ng_model = "shippingMethod.Params.RequisiteId", required = "required", validation_input_text = "requisite_id" })
        </div>
    </div>

    <div class="form-group row middle-xs">
        <div class="flex-grow-n col-fixed-size-md">
            <span class="text-required">@T("Admin.ShippingMethods.YandexDelivery.CityWhichDeliveryIsMade")</span>
        </div>
        <div class="col-xs-6 relative">
            @Html.TextBoxFor(x => x.CityFrom, new {@class = "form-control", ng_model = "shippingMethod.Params.CityFrom", required = "required", validation_input_text = T("Admin.ShippingMethods.YandexDelivery.CityWhichDeliveryIsMade") })
        </div>
    </div>
    
    <div class="form-group row middle-xs">
        <div class="flex-grow-n col-fixed-size-md">
            <span class="text-required">@T("Admin.ShippingMethods.YandexDelivery.RewardIncludeInTheCost")</span>
        </div>
        <div class="col-xs-1">
            <label class="adv-checkbox-label">
                @Html.CheckBoxFor(x => x.ShowAssessedValue, new {@class = "adv-checkbox-input", ng_model = "shippingMethod.Params.ShowAssessedValue"})
                <span class="adv-checkbox-emul"></span>
            </label>
            <help-trigger class="ng-cloak" data-title="@T("Admin.ShippingMethods.YandexDelivery.RewardIncludeInTheCost")">
                <p>@T("Admin.ShippingMethods.YandexDelivery.Attention")</p>
                <p>@T("Admin.ShippingMethods.YandexDelivery.ValueOfThisOptionMustMatch")</p> 
                <p>@T("Admin.ShippingMethods.YandexDelivery.CostOfDeliveryWillIncrease")</p>
            </help-trigger>
        </div>
    </div>

    <div class="form-group row middle-xs">
        <div class="flex-grow-n col-fixed-size-md">
            @T("Admin.ShippingMethods.YandexDelivery.SynchronizeOrderStatuses")
        </div>
        <div class="col-xs-6 relative">
            <label class="adv-checkbox-label form-label-block">
                @Html.CheckBoxFor(x => x.StatusesSync, new { ng_model = "shippingMethod.Params.StatusesSync", ng_init = "shippingMethod.Params.StatusesSync=" + Model.StatusesSync.ToLowerString(), @class = "adv-checkbox-input" })
                <span class="adv-checkbox-emul"></span>
            </label>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md font-bold">
            @T("Admin.ShippingMethods.YandexDelivery.Statuses")
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Черновик
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_DRAFT, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_DRAFT", ng_init = "shippingMethod.Params.Status_DRAFT='" + Model.Status_DRAFT + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Черновик">
                заказ доступен для редактирования.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Создан
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_CREATED, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_CREATED", ng_init = "shippingMethod.Params.Status_CREATED='" + Model.Status_CREATED + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Создан">
                заказ проверен и отправлен в службу доставки.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Ждёт подтверждения службы доставки
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_SENDER_SENT, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_SENDER_SENT", ng_init = "shippingMethod.Params.Status_SENDER_SENT='" + Model.Status_SENDER_SENT + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Ждёт подтверждения службы доставки">
                заказ ожидает подтверждения от службы доставки.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Подтверждён службой доставки
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_DELIVERY_LOADED, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_DELIVERY_LOADED", ng_init = "shippingMethod.Params.Status_DELIVERY_LOADED='" + Model.Status_DELIVERY_LOADED + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Подтверждён службой доставки">
                заказ подтвержден службой доставки.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Ожидается на едином складе
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_SENDER_WAIT_FULFILMENT, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_SENDER_WAIT_FULFILMENT", ng_init = "shippingMethod.Params.Status_SENDER_WAIT_FULFILMENT='" + Model.Status_SENDER_WAIT_FULFILMENT + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Ожидается на едином складе">
                заказ ожидается на едином складе.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Ожидается в службе доставки
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_SENDER_WAIT_DELIVERY, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_SENDER_WAIT_DELIVERY", ng_init = "shippingMethod.Params.Status_SENDER_WAIT_DELIVERY='" + Model.Status_SENDER_WAIT_DELIVERY + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Ожидается в службе доставки">
                заказ ожидается в службе доставки.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Подтверждён единым складом
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_FULFILMENT_LOADED, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_FULFILMENT_LOADED", ng_init = "shippingMethod.Params.Status_FULFILMENT_LOADED='" + Model.Status_FULFILMENT_LOADED + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Подтверждён единым складом">
                заказ подтвержден единым складом.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            На едином складе
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_FULFILMENT_ARRIVED, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_FULFILMENT_ARRIVED", ng_init = "shippingMethod.Params.Status_FULFILMENT_ARRIVED='" + Model.Status_FULFILMENT_ARRIVED + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="На едином складе">
                заказ находится на едином складе.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Готов к передаче в службу доставки
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_FULFILMENT_PREPARED, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_FULFILMENT_PREPARED", ng_init = "shippingMethod.Params.Status_FULFILMENT_PREPARED='" + Model.Status_FULFILMENT_PREPARED + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Готов к передаче в службу доставки">
                заказ готов к передаче в службу доставки.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Передан в службу доставки
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_FULFILMENT_TRANSMITTED, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_FULFILMENT_TRANSMITTED", ng_init = "shippingMethod.Params.Status_FULFILMENT_TRANSMITTED='" + Model.Status_FULFILMENT_TRANSMITTED + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Передан в службу доставки">
                заказ передан в службу доставки.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            На складе службы доставки
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_DELIVERY_AT_START, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_DELIVERY_AT_START", ng_init = "shippingMethod.Params.Status_DELIVERY_AT_START='" + Model.Status_DELIVERY_AT_START + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="На складе службы доставки">
                заказ находится на складе службы доставки.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Доставляется
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_DELIVERY_TRANSPORTATION, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_DELIVERY_TRANSPORTATION", ng_init = "shippingMethod.Params.Status_DELIVERY_TRANSPORTATION='" + Model.Status_DELIVERY_TRANSPORTATION + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Доставляется">
                заказ доставляется.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            В городе покупателя
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_DELIVERY_ARRIVED, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_DELIVERY_ARRIVED", ng_init = "shippingMethod.Params.Status_DELIVERY_ARRIVED='" + Model.Status_DELIVERY_ARRIVED + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="В городе покупателя">
                заказ находится в населенном пункте получателя.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Доставляется по городу
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_DELIVERY_TRANSPORTATION_RECIPIENT, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_DELIVERY_TRANSPORTATION_RECIPIENT", ng_init = "shippingMethod.Params.Status_DELIVERY_TRANSPORTATION_RECIPIENT='" + Model.Status_DELIVERY_TRANSPORTATION_RECIPIENT + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Доставляется по городу">
                заказ доставляется по населенному пункту получателя.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            В пункте самовывоза
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_DELIVERY_ARRIVED_PICKUP_POINT, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_DELIVERY_ARRIVED_PICKUP_POINT", ng_init = "shippingMethod.Params.Status_DELIVERY_ARRIVED_PICKUP_POINT='" + Model.Status_DELIVERY_ARRIVED_PICKUP_POINT + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="В пункте самовывоза">
                заказ находится в пункте самовывоза.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Доставлен
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_DELIVERY_DELIVERED, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_DELIVERY_DELIVERED", ng_init = "shippingMethod.Params.Status_DELIVERY_DELIVERED='" + Model.Status_DELIVERY_DELIVERED + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Доставлен">
                заказ доставлен получателю.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Готовится к возврату
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_RETURN_PREPARING, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_RETURN_PREPARING", ng_init = "shippingMethod.Params.Status_RETURN_PREPARING='" + Model.Status_RETURN_PREPARING + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Готовится к возврату">
                заказ готовится к возврату.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Возвращён на склад службы доставки
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_RETURN_ARRIVED_DELIVERY, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_RETURN_ARRIVED_DELIVERY", ng_init = "shippingMethod.Params.Status_RETURN_ARRIVED_DELIVERY='" + Model.Status_RETURN_ARRIVED_DELIVERY + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Возвращён на склад службы доставки">
                заказ возвращен на склад службы доставки.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Возвращён на единый склад
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_RETURN_ARRIVED_FULFILMENT, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_RETURN_ARRIVED_FULFILMENT", ng_init = "shippingMethod.Params.Status_RETURN_ARRIVED_FULFILMENT='" + Model.Status_RETURN_ARRIVED_FULFILMENT + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Возвращён на единый склад">
                заказ возвращен на единый склад.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Готов к возврату в магазин
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_RETURN_PREPARING_SENDER, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_RETURN_PREPARING_SENDER", ng_init = "shippingMethod.Params.Status_RETURN_PREPARING_SENDER='" + Model.Status_RETURN_PREPARING_SENDER + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Готов к возврату в магазин">
                заказ возвращается в магазин.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Возвращён в магазин
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_RETURN_RETURNED, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_RETURN_RETURNED", ng_init = "shippingMethod.Params.Status_RETURN_RETURNED='" + Model.Status_RETURN_RETURNED + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Возвращён в магазин">
                заказ возвращен в магазин.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Передан на единый склад
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_RETURN_TRANSMITTED_FULFILMENT, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_RETURN_TRANSMITTED_FULFILMENT", ng_init = "shippingMethod.Params.Status_RETURN_TRANSMITTED_FULFILMENT='" + Model.Status_RETURN_TRANSMITTED_FULFILMENT + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Передан на единый склад">
                заказ передан на единый склад.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Утерян
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_LOST, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_LOST", ng_init = "shippingMethod.Params.Status_LOST='" + Model.Status_LOST + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Утерян">
                заказ утерян в процессе доставки.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Статус уточняется
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_UNEXPECTED, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_UNEXPECTED", ng_init = "shippingMethod.Params.Status_UNEXPECTED='" + Model.Status_UNEXPECTED + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Статус уточняется">
                статус заказа уточняется.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Отменён
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_CANCELED, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_CANCELED", ng_init = "shippingMethod.Params.Status_CANCELED='" + Model.Status_CANCELED + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Отменён">
                заказ отменен.
            </help-trigger>
        </div>
    </div>
    <div class="form-group row middle-xs" ng-if="shippingMethod.Params.StatusesSync">
        <div class="flex-grow-n col-fixed-size-md">
            Ошибка
        </div>
        <div class="col-xs-6 relative">
            @Html.DropDownListFor(x => x.Status_ERROR, Model.ListStatuses, new { ng_model = "shippingMethod.Params.Status_ERROR", ng_init = "shippingMethod.Params.Status_ERROR='" + Model.Status_ERROR + "'", @class = "form-control" })
            <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="Ошибка">
                произошла ошибка.
            </help-trigger>
        </div>
    </div>
}

<div class="adv-panel-info">
    <a href="http://www.advantshop.net/help/pages/delivery-yandex" target="_blank">@T("Admin.ShippingMethods.YandexDelivery.Instructions")</a>
</div>

@model AdvantShop.Web.Admin.Models.Orders.OrdersEdit.OrderModel
@{
    var order = Model.Order;
    var isPaied = order != null && order.Payed;
    var hasCerticates = order != null && order.OrderCertificates != null && order.OrderCertificates.Count > 0;
    var isDraft = !Model.IsEditMode || Model.Order == null || Model.Order.IsDraft;
}

<div class="order-items-content" ng-init="order.startGridOrderItems(@isPaied.ToLowerString())">
    <div class="row between-xs middle-xs m-b-sm">
        <div class="col-xs-slim">
            <div class="fs-md text-color-alt">
                @T("Admin.Orders.OrderItems.OrderContents")
            </div>
        </div>
        <div class="col-xs-slim">
            @if (!isPaied && !hasCerticates)
            {
                <ui-modal-trigger class="header-subtext pull-right" size="xs-11" data-controller="'ModalOffersSelectvizrCtrl'" data-controller-as="ctrl"
                                  ng-show="!order.isPaied"
                                  data-on-close="order.addOrderItems(result)"
                                  template-url="../areas/admin/content/src/_shared/modal/offers-selectvizr/offersSelectvizrModal.html">
                    <a href="">@T("Admin.Orders.OrderItems.AddGoods")</a>
                </ui-modal-trigger>
            }
        </div>
    </div>


    <div ng-if="order.isShowGridOrderItem" class="m-b">
        <div class="row">
            <div class="col-xs-12">
                @if (hasCerticates)
                {
                <ui-grid-custom class="order-grid"
                                grid-unique-id="gridOrderCertificates"
                                grid-filter-enabled="false"
                                grid-pagination-enabled="false"
                                grid-selection-enabled="false"
                                grid-params="{OrderId: order.orderId}"
                                grid-options="order.gridOrderCertificatesOptions"
                                grid-url="'orders/getOrderCertificates'"
                                grid-prevent-state-in-hash="@(isDraft ? "true" : "false")">
                    <ui-grid-custom-override-control class="ng-cloak">
                        @Html.Partial("ProductGridItemInOrder")
                    </ui-grid-custom-override-control>
                    <ui-grid-custom-footer class="ui-grid-custom-footer--mobile" ng-bind="orders.grid.gridOptions.TotalString"></ui-grid-custom-footer>
                </ui-grid-custom>
                }
                else
                {
                <ui-grid-custom class="order-grid"
                                grid-unique-id="gridOrderItems"
                                grid-on-init="order.gridOrderItemsOnInit(grid)"
                                grid-filter-enabled="false"
                                grid-pagination-enabled="true"
                                grid-selection-enabled="false"
                                grid-params="{OrderId: order.orderId}"
                                grid-options="order.gridOrderItemsOptions"
                                grid-url="'orders/getOrderItems'"
                                grid-inplace-url="'orders/updateOrderItem'"
                                grid-on-inplace-apply="order.gridOrderItemUpdate()"
                                grid-on-delete="order.gridOrderItemDelete()"
                                grid-extend-ctrl="order"
                                grid-empty-text="'@T("Admin.Orders.OrderItems.SelectGoods")'"
                                grid-selection-on-init="order.gridOrderItemsSelectionOnInit(selectionCustom)"
                                grid-on-inplace-before-apply="order.gridOnInplaceBeforeApply(rowEntity, colDef, newValue)"
                                grid-prevent-state-in-hash="@(isDraft ? "true" : "false")"
                                grid-on-fetch="order.gridOrderOnFetch()"
                                ng-style="{'counter-reset': 'ordernumber ' +  (order.gridOrderItemsOptions.paginationCurrentPage - 1 ) * (order.gridOrderItemsOptions.paginationPageSize)}">
                    <ui-grid-custom-override-control class="ng-cloak">
                        @Html.Partial("ProductGridItemInOrder")
                    </ui-grid-custom-override-control>
                </ui-grid-custom>
                }
            </div>
        </div>
        <order-items-summary data-order-id="order.orderId"
                             data-country="order.country"
                             data-region="order.region"
                             data-city="order.city"
                             data-zip="order.zip"
                             data-is-edit="!order.isPaied"
                             ng-if="!(order.isDraft && (order.gridOrderItems.gridOptions.data == null || order.gridOrderItems.gridOptions.data.length == 0))"
                             on-init="order.initOrderItemsSummary(orderItemsSummary)"
                             on-stop-edit="order.checkStopEdit()"
                             status-comment="@Model.Order.StatusComment"
                             admin-comment="@Model.Order.AdminOrderComment"
                             class="row">
            <footer-left>
                <ng-form novalidate="" name="orderCommentsForm" bs-modifiable="false">
                    <div class="m-b-md">
                        <div class="m-b-xs">@T("Admin.Orders.OrderItems.CommentForStatus")</div>
                        <div>
                            @Html.TextAreaFor(x => x.Order.StatusComment, new { @class = "form-control", @rows = 3, ng_model = "order.statusComment",
                       ng_blur = "orderCommentsForm['Order.StatusComment'].$dirty === true && order.saveChanges(orderCommentsForm)"
                   })
                        </div>
                    </div>
                    <div>
                        <div class="m-b-xs">@T("Admin.Orders.OrderItems.AdminCommentForOrder")</div>
                        <div>
                            @Html.TextAreaFor(x => x.Order.AdminOrderComment, new { @class = "form-control", @rows = 3, ng_model = "order.adminOrderComment",
                           ng_blur = "orderCommentsForm['Order.AdminOrderComment'].$dirty === true && order.updateAdminComment(orderCommentsForm)"
                       })
                        </div>
                    </div>
                </ng-form>
            </footer-left>
        </order-items-summary>
    </div>
</div>

@Html.RenderModules("admin_order_orderitems", new { orderId = Model.OrderId })
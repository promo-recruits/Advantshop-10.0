@use "sass:math";

$column-count: 12 !default;
$column-selector: '.modal' !default;

$gutter-width: 1.25rem !default;
$gutter-compensation: (math.div($gutter-width , 2) * -1) !default;
$half-gutter-width: (math.div($gutter-width, 2)) !default;

$width-xs: 30 !default;
$width-sm: 48 !default;
$width-md: 62 !default;
$width-lg: 75 !default;
$width-wl: 120 !default;

$viewport-xs: #{$width-xs}em !default;
$viewport-sm: #{$width-sm}em !default;
$viewport-md: #{$width-md}em !default;
$viewport-lg: #{$width-lg}em !default;
$viewport-wl: #{$width-wl}em !default;

$container-sm: #{$width-sm}rem + $gutter-width !default;
$container-md: #{$width-md}rem + $gutter-width !default;
$container-lg: #{$width-lg}rem + $gutter-width !default;
$container-wall: #{$width-wl}rem + $gutter-width !default;

$xs: 'xs' !default;
$sm: 'sm' !default;
$md: 'md' !default;
$lg: 'lg' !default;
$wl: 'wl' !default;

$block-delimiter: '-' !default;
$element-delimiter: '-' !default;
$modifier-delimiter: '-' !default;

$defaultQuery: $viewport-xs !default;
$sizes: $xs $sm $md $lg $wl !default;
$queries: (#{$xs}:#{$viewport-xs}, #{$sm}:#{$viewport-sm}, #{$md}:#{$viewport-md}, #{$lg}:#{$viewport-lg}, #{$wl}:#{$viewport-wl}) !default;

$column-properties: 'width' !default;


@mixin percentWidth($property, $columns, $count) {
    #{$property}: (math.div(100% , $columns) * $count);
}

@mixin percentOffset($property, $columns, $count) {
    $single-column-width: ((100% / $columns) * 1);
    #{$property}: $single-column-width * $count;
}

@mixin queries($key, $queries) {
    $query: map-get($queries, $key);

    @if ($query == $defaultQuery) {
        @content;
    }
    @else {
        @media screen and (min-width: #{$query}) {
            @content;
        }
    }
}

@mixin columns($selector: $column-selector, $properties: $column-properties, $columns: $column-count, $queries: $queries) {
    @each $size in $sizes {

        $iterator-selector: '';

        @for $i from 0 through $columns {
            @if ($i == 0) {
                $iterator-selector: #{$selector}#{$block-delimiter}#{$size};
            }
            @else {
                $iterator-selector: #{$selector}#{$block-delimiter}#{$size}#{$modifier-delimiter}#{$i};
            }

            #{$iterator-selector} {
                @extend %column;
            }
        }

        @include queries($size, $queries) {
            @for $i from 0 through $columns {
                @if ($i == 0) {
                    #{$selector}#{$block-delimiter}#{$size} {
                        @content;
                    }
                }
                @else {
                    #{$selector}#{$block-delimiter}#{$size}#{$modifier-delimiter}#{$i} {
                        @content;

                        @each $prop in $properties {
                            @include percentWidth($prop, $columns, $i);
                        }
                    }
                }
            }
        }
    }
}

%column {
    box-sizing: border-box;
}

@include columns();

ui-modal-cross {
    width: 40px;
    display: flex;
    align-items: center;
    height: 100%;
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
}

.modal-header .close {
    width: 32px;
}

.modal--panel {
    text-align: right;

    .modal-dialog {
        width: calc(100% - 70px);
        box-sizing: border-box;
        transition: none !important;
    }

    .modal-body {
        max-height: 100vh;
    }

    .modal-content {
        min-height: 100vh;
        border: 0;
        border-radius: 0;
        max-width: 100%;
    }

    ui-modal-cross {
        position: fixed;
        top: 15px;
        left: -57px;
        font-size: 25px;
        background: #fff;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        -webkit-box-shadow: 0 0 5px 1px #c3c3c3;
        box-shadow: 0 0 5px 1px #c3c3c3;
        z-index: 10;
        display: flex;
        justify-content: center;
        align-items: center;
        transform: none;
    }

    .close {
        color: #676a6c;
        position: relative;
        left: auto;
        top: auto;
        right: auto;
        bottom: auto;
        height: auto;
        font-size: 25px;
        text-align: center;
        opacity: 1;

        &:after {
            background: none;
            content: "\f00d";
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
            font-size: inherit;
            text-rendering: auto;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            position: relative;
            left: auto;
            top: auto;
            right: auto;
            bottom: auto;
        }
    }

    .is-sticky .sticky-page-name-in-modal--panel {
        left: 0 !important;
    }
}


.modal-open--panel {
    overflow: hidden !important;
}

.modal--strecth {
    .modal-content {
        overflow: visible;
    }

    .modal-body {
        overflow: visible;
        height: auto;
    }
}

.modal__window--scrollbar-no {
    .modal-content {
        overflow: visible;
    }
}

.modal--bg .modal-content {
    background-color: #eee;
}
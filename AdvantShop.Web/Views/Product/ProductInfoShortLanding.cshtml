@using AdvantShop.Core.Services.Landing
@model AdvantShop.ViewModel.ProductDetailsLanding.ProductDetailsViewModelLanding
@{
    var productModel = Model.ProductModel;
    var product = productModel.Product;
    var offer = productModel.Offer;
    var available = offer != null && (offer.Amount > 0 || productModel.AllowBuyOutOfStockProducts) && (productModel.FinalPrice > 0 || (productModel.FinalPrice == 0 && productModel.FinalDiscount != null && productModel.FinalDiscount.HasValue));
    var prodMinAmount = product.MinAmount == null
                            ? product.Multiplicity
                            : product.Multiplicity > product.MinAmount
                                ? product.Multiplicity
                                : product.MinAmount.Value;
}

<div data-ng-controller="ProductCtrl as product"
     class="row between-xs" 
     data-ng-init="product.loadData(@Model.ProductModel.Product.ProductId,  @(Model.ProductModel.ColorId != null ?  Model.ProductModel.ColorId.ToString() : "null"), null, false)">
    <div class="col-xs-12">

        <div class="lp-product-info__price-wrap" data-ng-init="product.discount=@product.Discount.Percent.ToInvariantString(); product.discountAmount=@product.Discount.Amount.ToInvariantString(); product.Price.PriceNumber=@productModel.FinalPrice.ToInvariantString();">
            @if (!productModel.HidePrice)
            {
                <di>
                    <div class="lp-product-info__price">
                        <div data-ng-if="product.Price.PriceString == null">
                            <div>@Html.Raw(productModel.PreparedPrice)</div>
                        </div>
                        <div data-ng-bind-html="product.Price.PriceString"></div>
                    </div>
                </di>
            }
        </div>
        
        <div class="lp-product-info__sizes">
            @if (offer != null)
            {
                @Html.Action("SizeColorPicker", "Product", new { product })

                if (productModel.HasCustomOptions)
                {
                    @Html.Action("CustomOptions", "Product", new { product.ProductId })
                }

                <div class="details-row">
                    @Html.RenderModules("product_info", new { product, offer })
                </div>
            }
        </div>

        @if (offer != null)
        {
            <div class="lp-product-info__amount" data-ng-if="product.offerSelected.IsAvailable === true || @(productModel.AllowBuyOutOfStockProducts.ToLowerString()) && product.data.AllowPreOrder">
                <div class="lp-product-info__amount-name">
                    @T("Product.ProductInfo.Amount"):
                    @if (SettingsCheckout.AmountLimitation)
                    {
                        <div ng-show="product.offerSelected.AmountBuy > product.offerSelected.Amount" class="ng-hide availability not-available">
                            <span>Доступно</span>
                            <div class="details-avalable-text" ng-bind="product.offerSelected.Amount"></div>
                            <div class="details-avalable-unit" ng-bind="product.data.Unit"></div>
                        </div>
                    }
                </div>
                <div class="details-param-value">
                    <div class="details-spinbox-block">
                        <div data-spinbox
                             data-value="product.offerSelected.AmountBuy"
                             data-proxy="product.offerSelected"
                             data-update-fn="product.updateAmount(value, proxy)"
                             data-step="@product.Multiplicity.ToInvariantString()"
                             data-max="@product.MaxAmount.ToInvariantString(Int16.MaxValue)"
                             data-min="@prodMinAmount.ToInvariantString()"></div>
                    </div>
                </div>
            </div>
        }

        <div class="product-details__button">
            <div class="lp-btn-group">
                @if (productModel.ShowAddButton)
                {
                    <div class="lp-btn-group__item--indent @(!available ? "ng-hide" : string.Empty)"
                            @Html.Raw(productModel.BlockId != null ? "data-ng-init=\"product.lpBlockId = " + productModel.BlockId + "\"" : "")
                            data-ng-class="{'ng-hide': product.dirty === false ? @(!available ? "true" : "false") : (product.offerSelected.Amount <= 0 && @((!productModel.AllowBuyOutOfStockProducts).ToLowerString())) || (product.Price.PriceNumber === 0 && product.Price.PriceOldNumber == 0) || (@((!productModel.AllowBuyOutOfStockProducts).ToLowerString()) && @SettingsCheckout.AmountLimitation.ToLowerString() && product.offerSelected.AmountBuy > product.offerSelected.Amount) }">
                        <a href="javascript:void(0)"
                            class="lp-btn lp-btn--primary lp-lp-btn--xs"
                            data-cart-add
                            data-cart-add-valid="product.validate()"
                            data-offer-id="product.offerSelected.OfferId"
                            data-product-id="@product.ProductId"
                            data-amount="product.offerSelected.AmountBuy"
                            data-attributes-xml="product.customOptions.xml"
                            @Html.Raw(productModel.HideShipping ? "data-hide-shipping=\"true\"" : "")
                            data-mode="lp"
                            data-lp-id="@productModel.LandingId"
                            @Html.Raw(LpService.Mode != null ? "data-mode-from=\"" + LpService.Mode + "\"" : "")
                            @Html.Raw(productModel.BlockId != null ? "data-lp-block-id=\"" + productModel.BlockId + "\"" : "")
                            @Html.Raw(productModel.LpButton != null && productModel.LpButton.ActionUpsellLpId != null ? "data-lp-up-id=\"" + productModel.LpButton.ActionUpsellLpId + "\"" : "")
                            @Html.Raw(LpService.EntityId != 0 ? string.Format("data-lp-entity-id=\"{0}\" data-lp-entity-type=\"{1}\"", LpService.EntityId, LpService.EntityType) : "")>
                            @Html.Raw(productModel.LpButton != null && !string.IsNullOrEmpty(productModel.LpButton.Text) ? productModel.LpButton.Text : SettingsCatalog.BuyButtonText)
                        </a>
                    </div>
                }

                @if (productModel.ShowButton2)
                {
                    <div class="lp-btn-group__item--indent">
                        @Html.Action("LpButton", "Landing", new {blockId = productModel.BlockId, button = productModel.LpButton2})
                    </div>
                }
            </div>
        </div>

    </div>
</div>
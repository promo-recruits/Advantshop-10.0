@using AdvantShop.ViewModel.ProductDetails
@model SizeColorPickerViewModel

@if (Model.Colors.IsNotEmpty())
{
    <div class="details-row details-colors" data-ng-init="product.colorsExist = true">
        @Html.Partial("_Colors", new ColorsViewModel
   {
       NgColors = Model.Colors,
       ColorWidth = Model.ColorIconWidthDetails,
       ColorHeight = Model.ColorIconHeightDetails,
       NgColorSelected = "product.colorSelected",
       NgInitColors = "product.initColors(colorsViewer)",
       NgChangeColor = "product.changeColor(color)",
       EnabledSlider = false,
       HeaderText = Model.ColorsHeader,
       ImageType = AdvantShop.FilePath.ColorImageType.Details,
       ColorsViewMode = SettingsCatalog.ColorsViewMode,
       IsHiddenColorName = SettingsCatalog.ColorsViewMode == ColorsViewMode.IconAndText,
       SelectedColors = "[" + Model.SelectedColorId + "]"
   })
    </div>
}
@if (Model.Sizes.IsNotEmpty())
{
    <div class="details-row details-sizes" data-ng-init="product.sizesExist = true">
        @Html.Partial("_Sizes", new SizesViewModel
   {
       NgSizes = Model.Sizes,
       NgSizeSelected = "product.sizeSelected",
       NgInitSizes = "product.initSizes(sizesViewer)",
       NgChangeSize = "product.changeSize(size)",
       HeaderText = Model.SizesHeader,
       SelectedSizes = "[" + Model.SelectedSizeId + "]"
   })
    </div>
}
@using AdvantShop.Customers
@using AdvantShop.ViewModel.Common
@model AdvantShop.ViewModel.Checkout.CheckoutUserViewModel
@{
    var useAddressSuggestions = Model.SuggestionsModule != null && Model.SuggestionsModule.SuggestAddressInClient;
}

@if (Model.Data.ShowContacts())
{
    <div data-address-list data-type="change"
         data-init-address-fn="checkout.changeListAddress(address)"
         data-change-address-fn="checkout.changeListAddress(address)"
         data-save-address-fn="checkout.changeListAddress(address)"
         data-is-show-name="true"></div>
}
else
{
    <div class="col-xs-12 col-md-8 ng-cloak ">
        <form name="checkoutNewCustomerForm" novalidate="novalidate" class="ng-cloak checkout-new-customer-form">
            <div data-ng-init="checkout.checkoutNewCustomerForm = checkoutNewCustomerForm" class="mobile-block">
                <div class="row middle-xs form-field-control">
                    <span class="col-xs-5 col-md-4 form-field-name-wrap">
                        <span class="form-field-name vertical-interval-xsmall input-required">E-mail</span>
                    </span>
                    <span class="col-xs-7 col-md-8 form-field-input-wrap">
                        <span class="form-field-input vertical-interval-xsmall" ng-init="checkout.newCustomer.email='@(Model.Data.User.Email ?? "")'">
                            @Model.Data.User.Email
                        </span>
                    </span>
                </div>
                <div class="row middle-xs form-field-control">
                    <span class="col-xs-5 col-md-4 form-field-name-wrap">
                        <span class="form-field-name vertical-interval-xsmall input-required">@SettingsCheckout.CustomerFirstNameField</span>
                    </span>
                    <span class="col-xs-7 col-md-8 form-field-input-wrap">
                        <span class="form-field-input vertical-interval-xsmall">
                            @Html.TextBoxFor(x => x.Data.User.FirstName, new
                            {
                                @class = "input-small",
                                required = "required",
                                data_ng_model = "checkout.newCustomer.firstname",
                                data_ng_blur = "checkout.saveNewCustomer()",
                                autocomplete = "given-name",
                                maxlength = "70"
                            })
                        </span>
                    </span>
                </div>

                @if (SettingsCheckout.IsShowLastName)
                {
                    <div class="row middle-xs form-field-control">
                        <span class="col-xs-5 col-md-4 form-field-name-wrap">
                            <span class="form-field-name vertical-interval-xsmall @(SettingsCheckout.IsRequiredLastName ? "input-required" : "")">@T("Checkout.CheckoutUser.LastName")</span>
                        </span>
                        <span class="col-xs-7 col-md-8 form-field-input-wrap">
                            <span class="form-field-input vertical-interval-xsmall">
                                @Html.TextBoxFor(x => x.Data.User.LastName, new
                                {
                                    @class = "input-small",
                                    data_ng_required = SettingsCheckout.IsRequiredLastName.ToLowerString(),
                                    data_ng_model = "checkout.newCustomer.lastname",
                                    data_ng_blur = "checkout.saveNewCustomer()",
                                    autocomplete = "family-name",
                                    maxlength = "70"
                                })
                            </span>
                        </span>
                    </div>
                }
                @if (SettingsCheckout.IsShowPatronymic)
                {
                    <div class="row middle-xs form-field-control">
                        <span class="col-xs-5 col-md-4 form-field-name-wrap">
                            <span class="form-field-name vertical-interval-xsmall @(SettingsCheckout.IsRequiredPatronymic ? "input-required" : "")">@T("Checkout.CheckoutUser.Patronymic")</span>
                        </span>
                        <span class="col-xs-7 col-md-8 form-field-input-wrap">
                            <span class="form-field-input vertical-interval-xsmall">
                                @Html.TextBoxFor(x => x.Data.User.Patronymic, new
                                {
                                    @class = "input-small",
                                    data_ng_required = SettingsCheckout.IsRequiredPatronymic.ToLowerString(),
                                    data_ng_model = "checkout.newCustomer.patronymic",
                                    data_ng_blur = "checkout.saveNewCustomer()",
                                    autocomplete = "additional-name",
                                    maxlength = "1000"
                                })
                            </span>
                        </span>
                    </div>
                }

                @if (SettingsCheckout.IsShowPhone)
                {
                    <div class="row middle-xs form-field-control">
                        <span class="col-xs-5 col-md-4 form-field-name-wrap">
                            <span class="form-field-name vertical-interval-xsmall @(SettingsCheckout.IsRequiredPhone ? "input-required" : "")">@SettingsCheckout.CustomerPhoneField</span>
                        </span>
                        <span class="col-xs-7 col-md-8 form-field-input-wrap">
                            <span class="form-field-input vertical-interval-xsmall">
                                @Html.TextBoxFor(x => x.Data.User.Phone, new
                           {
                               @class = "input-small",
                               type = "tel",
                               placeholder = "{{ :: 'Js.Phone.PhonePlaceholder' | translate }}",
                               data_mask_control = SettingsMain.EnablePhoneMask.ToLowerString(),
                               data_mask_control_preset = "phone",
                               data_ng_required = SettingsCheckout.IsRequiredPhone.ToLowerString(),
                               data_ng_model = "checkout.newCustomer.phone",
                               autocomplete = "tel",
                               maxlength = 70,
                               data_ng_change = "checkout.saveNewCustomer()"
                           })
                            </span>
                        </span>
                    </div>
                }

                @if (SettingsCheckout.IsShowBirthDay)
                {
                    <div class="row middle-xs form-field-control">
                        <span class="col-xs-5 col-md-4 form-field-name-wrap">
                            <span class="form-field-name vertical-interval-xsmall @(SettingsCheckout.IsRequiredBirthDay ? "input-required" : "")">@SettingsCheckout.BirthDayFieldName</span>
                        </span>
                        <span class="col-xs-7 col-md-8 form-field-input-wrap">
                            <span class="form-field-input vertical-interval-xsmall">
                                <span class="flatpickr-custom" ng-flatpickr fp-opts="{dateFormat: 'd.m.Y', startDateFormat: 'Y-m-d', wrap: true, enableTime: false}" fp-on-change="checkout.saveNewCustomer()">
                                        <input type="text"
                                               id="Data_User_BirthDay"
                                               name="Data.User.BirthDay"
                                               class="input-small flatpickr-custom__input"
                                               @Html.Raw(Model.Data.User.BirthDay != null ? "value=\"" + Model.Data.User.BirthDay.Value.ToString("dd.MM.yyyy") + "\"" : "")
                                               data-ng-required="@SettingsCheckout.IsRequiredBirthDay.ToLowerString()"
                                               data-ng-flatpickr-input
                                               data-ng-model="checkout.newCustomer.birthday"
                                               data-mask-control
                                               data-mask-control-preset="date">
                                        <span class="flatpickr-custom__toggle" data-toggle>
                                            <svg width="14" height="14" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm320-196c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zM192 268c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zM64 268c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z"></path></svg>
                                        </span>
                                    </span>
                            </span>
                        </span>
                    </div>
                }


                @Html.Partial("_CustomerFields", new CustomerFieldsViewModel(Model.Data.User.CustomerFields, "Data.User", "checkout.newCustomer", "checkout.saveNewCustomer()", "col-xs-5 col-md-4 form-field-name-wrap", "col-xs-7 col-md-8 form-field-input-wrap", true, CustomerFieldShowMode.Checkout))

                @if (!SettingsDesign.DisplayCityInTopPanel)
                {
                    if (SettingsCheckout.IsShowCity)
                    {
                        <div class="row middle-xs form-field-control">
                            <span class="col-xs-5 col-md-4 form-field-name-wrap">
                                <span class="form-field-name vertical-interval-xsmall @(SettingsCheckout.IsRequiredCity ? "input-required" : "")">@T("Checkout.CheckoutUser.City")</span>
                            </span>
                            <span class="col-xs-7 col-md-8 form-field-input-wrap">
                                <span class="autocompleter-block form-field-input vertical-interval-xsmall"
                                      data-field="Name" data-autocompleter
                                      data-request-url="/location/GetCitiesAutocomplete" data-template-path="scripts/_common/autocompleter/templates/location.html"
                                      data-apply-fn="checkout.processCity(obj, 0)">
                                    @Html.TextBoxFor(x => x.Data.Contact.City, new
                                    {
                                        @class = "input-small",
                                        type = "text",
                                        data_autocompleter_input = "",
                                        data_ng_required = SettingsCheckout.IsRequiredCity.ToLowerString(),
                                        data_ng_model = "checkout.contact.City",
                                        data_ng_init = "checkout.contact.City='" + Model.Data.Contact.City + "'",
                                        data_ng_change = "checkout.processCity()",
                                        autocomplete = useAddressSuggestions ? "new-password" : "address-level2",
                                        maxlength = "70",
                                        data_autocomplete_debounce = "400",
                                        data_autocomplete_apply_on_blur = "false"
                                    })
                                </span>
                            </span>
                        </div>
                    }
                    if (SettingsCheckout.IsShowDistrict)
                    {
                        <div class="row middle-xs form-field-control">
                            <span class="col-xs-5 col-md-4 form-field-name-wrap">
                                <span class="form-field-name vertical-interval-xsmall @(SettingsCheckout.IsRequiredDistrict ? "input-required" : "")">@T("Checkout.CheckoutUser.District")</span>
                            </span>
                            <span class="col-xs-7 col-md-8 form-field-input-wrap">
                                <span class="form-field-input vertical-interval-xsmall">
                                    @Html.TextBoxFor(x => x.Data.Contact.District, new
                                    {
                                        @class = "input-small",
                                        data_ng_required = SettingsCheckout.IsRequiredDistrict.ToLowerString(),
                                        data_ng_model = "checkout.contact.District",
                                        data_ng_init = "checkout.contact.District='" + Model.Data.Contact.District + "'",
                                        data_ng_change = "checkout.saveContact()",
                                        autocomplete = useAddressSuggestions ? "new-password" : "address-level3",
                                        maxlength = "70"
                                    })
                                </span>
                            </span>
                        </div>
                    }
                    if (SettingsCheckout.IsShowState)
                    {
                        <div class="row middle-xs form-field-control">
                            <span class="col-xs-5 col-md-4 form-field-name-wrap">
                                <span class="form-field-name vertical-interval-xsmall @(SettingsCheckout.IsRequiredState ? "input-required" : "")">@T("Checkout.CheckoutUser.Region")</span>
                            </span>
                            <span class="col-xs-7 col-md-8 form-field-input-wrap">
                                <span class="autocompleter-block form-field-input vertical-interval-xsmall" data-field="Name" data-autocompleter
                                      data-request-url="/location/GetRegionsAutocomplete" data-template-path="scripts/_common/autocompleter/templates/location.html"
                                      data-apply-fn="checkout.saveContact()">
                                    @Html.TextBoxFor(x => x.Data.Contact.Region, new
                                    {
                                        @class = "input-small",
                                        data_ng_required = SettingsCheckout.IsRequiredState.ToLowerString(),
                                        data_ng_model = "checkout.contact.Region",
                                        data_ng_init = "checkout.contact.Region='" + Model.Data.Contact.Region + "'",
                                        data_ng_change = "checkout.saveContact()",
                                        autocomplete = useAddressSuggestions ? "new-password" : "address-level1",
                                        maxlength = "70",
                                        data_autocompleter_input = "",
                                        data_autocomplete_debounce = "400",
                                        data_autocomplete_apply_on_blur = "false"
                                    })
                                </span>
                            </span>
                        </div>
                    }
                    if (SettingsCheckout.IsShowCountry)
                    {
                        <div class="row middle-xs form-field-control">
                            <span class="col-xs-5 col-md-4 form-field-name-wrap">
                                <span class="form-field-name vertical-interval-xsmall input-required">@T("Checkout.CheckoutUser.Country")</span>
                            </span>
                            <span class="col-xs-7 col-md-8 form-field-input-wrap">
                                <span class="form-field-input vertical-interval-xsmall">
                                    @Html.TextBoxFor(x => x.Data.Contact.Country, new
                                    {
                                        @class = "input-small",
                                        data_ng_required = SettingsCheckout.IsRequiredCountry.ToLowerString(),
                                        data_ng_model = "checkout.contact.Country",
                                        data_ng_init = "checkout.contact.Country='" + Model.Data.Contact.Country + "'",
                                        data_ng_change = "checkout.saveContact()",
                                        autocomplete = useAddressSuggestions ? "new-password" : "country-name",
                                        maxlength = "70"
                                    })
                                </span>
                            </span>
                        </div>
                    }
                }

                @if (SettingsCheckout.IsShowZip && SettingsCheckout.ZipDisplayPlace)
                {
                    <div class="row middle-xs form-field-control">
                        <span class="col-xs-5 col-md-4 form-field-name-wrap">
                            <span class="form-field-name vertical-interval-xsmall @(SettingsCheckout.IsRequiredZip ? "input-required" : "")">@T("Checkout.CheckoutShippingAddress.Zip")</span>
                        </span>
                        <span class="col-xs-7 col-md-8 form-field-input-wrap">
                            <span class="form-field-input vertical-interval-xsmall">
                                @Html.TextBoxFor(x => x.Data.Contact.Zip, new
                                {
                                    @class = "input-small",
                                    data_ng_required = SettingsCheckout.IsRequiredZip.ToLowerString(),
                                    data_ng_model = "checkout.contact.Zip",
                                    data_ng_change = "checkout.saveContact()",
                                    maxlength = "70",
                                    autocomplete = useAddressSuggestions ? "new-password" : "postal-code"
                                })
                            </span>
                        </span>
                    </div>
                }

            </div>
        </form>
    </div>
}
@if (Model.Customer.RegistredUser && Model.Customer.EMail.Contains("@temp"))
{
    <div data-modal-control id="changetempemail" data-is-open="true" data-cross-enable="false" data-close-out="false">
        <div class="modal-header" data-modal-header>
            @T("MyAccount.Index.Attention")
        </div>
        <div class="modal-content">
            @T("MyAccount.Index.EnterContactEmail")
            <br /><br />
            Email:<br />
            <input type="email" id="tempemail" ng-model="checkout.tempemail" class="input-small" required="" />
            <div class="error-text" data-ng-if="checkout.modalWrongNewEmail">
                @T("MyAccount.Index.WrongEmail")
            </div>
        </div>
        <div class="modal-footer" data-modal-footer>
            <input type="button" value="@T("MyAccount.Index.ChangeEmail")" ng-click="checkout.changeTempEmail(checkout.tempemail)" class="btn btn-small btn-submit" />
        </div>
    </div>
}

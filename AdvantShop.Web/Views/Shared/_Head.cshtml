@using AdvantShop.Customers
@using AdvantShop.Design

<style>[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>

@Html.Raw(SettingsSEO.CustomMetaString)

@Html.Partial("_AdditionalHeadScripts")

<link rel="preload" as="font" href="fonts/advantshopfonts/advantshopfonts.woff2" type="font/woff2" crossorigin/>

@{
    var isShowDesignConstructor = CustomerContext.CurrentCustomer.CustomerRole == Role.Administrator || AdvantShop.Demo.IsDemoEnabled;
    var cssBundle = "main.css";
    var inlineStyles = "inlineStyles.css";

    if (!Request["excludeCriticalCSS"].TryParseBool())
    {
        if (!isShowDesignConstructor)
        {
            Html.AddBundles(new List<string>()
            {
                "~/" + DesignService.GetDesign("colorscheme") + "/styles/styles.css",
                "~/" + DesignService.GetDesign("theme") + "/styles/styles.css",
                "~/" + DesignService.GetDesign("background") + "/styles/styles.css"
            }, inlineStyles);
        }
        else
        {
            cssBundle = "main_without_design.css";
            <link rel="stylesheet" href="@(UrlService.GetUrl() + DesignService.GetDesign("colorscheme") + "/styles/styles.css")" data-builder-stylesheet data-builder-type="colorScheme"/>
            <link rel="stylesheet" href="@(UrlService.GetUrl() + DesignService.GetDesign("theme") + "/styles/styles.css")" data-builder-stylesheet data-builder-type="theme"/>
            <link rel="stylesheet" href="@(UrlService.GetUrl() + DesignService.GetDesign("background") + "/styles/styles.css")" data-builder-stylesheet data-builder-type="background"/>
        }
    }
}

@if (!Request["excludeCriticalCSS"].TryParseBool())
{
    @Html.RenderAssetsCriticalCss()
    <style>
    @Html.RenderCssBundle(inlineStyles, inline: true)
    </style>
}

@Html.RenderAssetFilesAsHtml("head", "")

@Html.Partial("_HeadStylesTemplate")
@Html.RenderCssBundle(cssBundle)
@Html.Action("MetaData", "Common")
@Html.RenderModules("headStyles")
@Html.RenderModules("head")
@Html.StaticBlock("head", onlyContent: true)